/*! \file examples/elliptic_p1/meshes_inline.h
 *
 *  Created by James Adler, Xiaozhe Hu, and Ludmil Zikatanov on 20190420.
 *  Copyright 2019__HAZMATH__. All rights reserved.
 *
 *  \note Examples with initial meshes on the unit cube in R(d),
 *  d=2,3,4, and 5.
 *
 *  \note: modified by ltz on 20210601
 *
 */
//
scomplex *mesh2d()
{
  const INT  dim=2;  
  const INT ns=2,nv=4;
  const INT dim1=dim+1;
  // 2*(dim+1)=6
  INT el2v[6]={0,2,3,				\
	       0,1,3};  
  // 4*(dim)=8
  REAL x[8]={0.,0.,				\
	     1.,0.,				\
	     0.,1.,				\
	     1.,1.};
  scomplex *sc=haz_scomplex_init(dim,ns, nv,dim);
  memcpy(sc->x,x,nv*dim*sizeof(REAL));
  memcpy(sc->nodes,el2v,ns*dim1*sizeof(INT));
  return sc;
}
scomplex *mesh3d()
{
  const INT  dim=3;  
  const INT ns=6,nv=8;
  const INT dim1=dim+1;
  // 6*(dim+1)=24
  INT el2v[24]={0,4,6,7,			\
		0,4,5,7,			\
		0,2,6,7,			\
		0,2,3,7,			\
		0,1,5,7,			\
		0,1,3,7};
  // 8*(dim)=24  
  REAL x[24]={0.,0.,0.,			\
	      0.,0.,1.,			\
	      0.,1.,0.,			\
	      0.,1.,1.,			\
	      1.,0.,0.,			\
	      1.,0.,1.,			\
	      1.,1.,0.,			\
	      1.,1.,1.};
  scomplex *sc=haz_scomplex_init(dim,ns, nv,dim);
  memcpy(sc->x,x,nv*dim*sizeof(REAL));
  memcpy(sc->nodes,el2v,ns*dim1*sizeof(INT));
  //  find_nbr(sc->ns,sc->nv,sc->n,sc->nodes,sc->nbr);
  //  sc_vols(sc);
  return sc;
}
/*****************************************************/
scomplex *mesh4d()
{
  const INT  dim=4;  
  const INT ns=24,nv=16;
  const INT dim1=dim+1;
  // 24*(dim+1)=120
  INT el2v[120]={0,8,12,14,15,			\
		 0,8,12,13,15,			\
		 0,8,10,14,15,			\
		 0,8,10,11,15,			\
		 0,8,9,13,15,			\
		 0,8,9,11,15,			\
		 0,4,12,14,15,			\
		 0,4,12,13,15,			\
		 0,4,6,14,15,			\
		 0,4,6,7,15,			\
		 0,4,5,13,15,			\
		 0,4,5,7,15,			\
		 0,2,10,14,15,			\
		 0,2,10,11,15,			\
		 0,2,6,14,15,			\
		 0,2,6,7,15,			\
		 0,2,3,11,15,			\
		 0,2,3,7,15,			\
		 0,1,9,13,15,			\
		 0,1,9,11,15,			\
		 0,1,5,13,15,			\
		 0,1,5,7,15,			\
		 0,1,3,11,15,			\
		 0,1,3,7,15};
  
  // 16*(dim)=64  
  REAL x[64]={0.,0.,0.,0.,			\
	      0.,0.,0.,1.,			\
	      0.,0.,1.,0.,			\
	      0.,0.,1.,1.,			\
	      0.,1.,0.,0.,			\
	      0.,1.,0.,1.,			\
	      0.,1.,1.,0.,			\
	      0.,1.,1.,1.,			\
	      1.,0.,0.,0.,			\
	      1.,0.,0.,1.,			\
	      1.,0.,1.,0.,			\
	      1.,0.,1.,1.,			\
	      1.,1.,0.,0.,			\
	      1.,1.,0.,1.,			\
	      1.,1.,1.,0.,			\
	      1.,1.,1.,1.};      
  scomplex *sc=haz_scomplex_init(dim,ns, nv,dim);
  memcpy(sc->x,x,nv*dim*sizeof(REAL));
  memcpy(sc->nodes,el2v,ns*dim1*sizeof(INT));
  //  find_nbr(sc->ns,sc->nv,sc->n,sc->nodes,sc->nbr);
  //  sc_vols(sc);
  return sc;
}
/*****************************************************/
scomplex *mesh5d()
{
  const INT  dim=5;  
  const INT ns=120,nv=32;
  const INT dim1=dim+1;
  //120*(dim+1)=720
  INT el2v[720]={0,16,24,28,30,31, \
		 0,16,24,28,29,31, \
		 0,16,24,26,30,31, \
		 0,16,24,26,27,31, \
		 0,16,24,25,29,31, \
		 0,16,24,25,27,31, \
		 0,16,20,28,30,31, \
		 0,16,20,28,29,31, \
		 0,16,20,22,30,31, \
		 0,16,20,22,23,31, \
		 0,16,20,21,29,31, \
		 0,16,20,21,23,31, \
		 0,16,18,26,30,31, \
		 0,16,18,26,27,31, \
		 0,16,18,22,30,31, \
		 0,16,18,22,23,31, \
		 0,16,18,19,27,31, \
		 0,16,18,19,23,31, \
		 0,16,17,25,29,31, \
		 0,16,17,25,27,31, \
		 0,16,17,21,29,31, \
		 0,16,17,21,23,31, \
		 0,16,17,19,27,31, \
		 0,16,17,19,23,31, \
		 0,8,24,28,30,31,  \
		 0,8,24,28,29,31,  \
		 0,8,24,26,30,31,  \
		 0,8,24,26,27,31,  \
		 0,8,24,25,29,31,  \
		 0,8,24,25,27,31,  \
		 0,8,12,28,30,31,  \
		 0,8,12,28,29,31,  \
		 0,8,12,14,30,31,  \
		 0,8,12,14,15,31,  \
		 0,8,12,13,29,31,  \
		 0,8,12,13,15,31,  \
		 0,8,10,26,30,31,  \
		 0,8,10,26,27,31,  \
		 0,8,10,14,30,31,  \
		 0,8,10,14,15,31,  \
		 0,8,10,11,27,31,  \
		 0,8,10,11,15,31,  \
		 0,8,9,25,29,31,   \
		 0,8,9,25,27,31,   \
		 0,8,9,13,29,31,   \
		 0,8,9,13,15,31,   \
		 0,8,9,11,27,31,   \
		 0,8,9,11,15,31,   \
		 0,4,20,28,30,31,  \
		 0,4,20,28,29,31,  \
		 0,4,20,22,30,31,  \
		 0,4,20,22,23,31,  \
		 0,4,20,21,29,31,  \
		 0,4,20,21,23,31,  \
		 0,4,12,28,30,31,  \
		 0,4,12,28,29,31,  \
		 0,4,12,14,30,31,  \
		 0,4,12,14,15,31,  \
		 0,4,12,13,29,31,  \
		 0,4,12,13,15,31,  \
		 0,4,6,22,30,31,   \
		 0,4,6,22,23,31,   \
		 0,4,6,14,30,31,   \
		 0,4,6,14,15,31,   \
		 0,4,6,7,23,31,	   \
		 0,4,6,7,15,31,	   \
		 0,4,5,21,29,31,   \
		 0,4,5,21,23,31,   \
		 0,4,5,13,29,31,   \
		 0,4,5,13,15,31,   \
		 0,4,5,7,23,31,	   \
		 0,4,5,7,15,31,	   \
		 0,2,18,26,30,31,  \
		 0,2,18,26,27,31,  \
		 0,2,18,22,30,31,  \
		 0,2,18,22,23,31,  \
		 0,2,18,19,27,31,  \
		 0,2,18,19,23,31,  \
		 0,2,10,26,30,31,  \
		 0,2,10,26,27,31,  \
		 0,2,10,14,30,31,  \
		 0,2,10,14,15,31,  \
		 0,2,10,11,27,31,  \
		 0,2,10,11,15,31,  \
		 0,2,6,22,30,31,   \
		 0,2,6,22,23,31,   \
		 0,2,6,14,30,31,   \
		 0,2,6,14,15,31,   \
		 0,2,6,7,23,31,	   \
		 0,2,6,7,15,31,	   \
		 0,2,3,19,27,31,   \
		 0,2,3,19,23,31,		\
		 0,2,3,11,27,31,		\
		 0,2,3,11,15,31,		\
		 0,2,3,7,23,31,			\
		 0,2,3,7,15,31,			\
		 0,1,17,25,29,31,		\
		 0,1,17,25,27,31,		\
		 0,1,17,21,29,31,		\
		 0,1,17,21,23,31,		\
		 0,1,17,19,27,31,		\
		 0,1,17,19,23,31,		\
		 0,1,9,25,29,31,		\
		 0,1,9,25,27,31,		\
		 0,1,9,13,29,31,		\
		 0,1,9,13,15,31,		\
		 0,1,9,11,27,31,		\
		 0,1,9,11,15,31,		\
		 0,1,5,21,29,31,		\
		 0,1,5,21,23,31,		\
		 0,1,5,13,29,31,		\
		 0,1,5,13,15,31,		\
		 0,1,5,7,23,31,			\
		 0,1,5,7,15,31,			\
		 0,1,3,19,27,31,		\
		 0,1,3,19,23,31,		\
		 0,1,3,11,27,31,		\
		 0,1,3,11,15,31,		\
		 0,1,3,7,23,31,			\
		 0,1,3,7,15,31};  
  // 16*(dim)=64,
  REAL x[160]={0.,0.,0.,0.,0.,			\
	       0.,0.,0.,0.,1.,			\
	       0.,0.,0.,1.,0.,			\
	       0.,0.,0.,1.,1.,			\
	       0.,0.,1.,0.,0.,			\
	       0.,0.,1.,0.,1.,			\
	       0.,0.,1.,1.,0.,			\
	       0.,0.,1.,1.,1.,			\
	       0.,1.,0.,0.,0.,			\
	       0.,1.,0.,0.,1.,			\
	       0.,1.,0.,1.,0.,			\
	       0.,1.,0.,1.,1.,			\
	       0.,1.,1.,0.,0.,			\
	       0.,1.,1.,0.,1.,			\
	       0.,1.,1.,1.,0.,			\
	       0.,1.,1.,1.,1.,			\
	       1.,0.,0.,0.,0.,			\
	       1.,0.,0.,0.,1.,			\
	       1.,0.,0.,1.,0.,			\
	       1.,0.,0.,1.,1.,			\
	       1.,0.,1.,0.,0.,			\
	       1.,0.,1.,0.,1.,			\
	       1.,0.,1.,1.,0.,			\
	       1.,0.,1.,1.,1.,			\
	       1.,1.,0.,0.,0.,			\
	       1.,1.,0.,0.,1.,			\
	       1.,1.,0.,1.,0.,			\
	       1.,1.,0.,1.,1.,			\
	       1.,1.,1.,0.,0.,			\
	       1.,1.,1.,0.,1.,			\
	       1.,1.,1.,1.,0.,			\
	       1.,1.,1.,1.,1.};      
  scomplex *sc=haz_scomplex_init(dim,ns, nv,dim);
  memcpy(sc->x,x,nv*dim*sizeof(REAL));
  memcpy(sc->nodes,el2v,ns*dim1*sizeof(INT));
  //  find_nbr(sc->ns,sc->nv,sc->n,sc->nodes,sc->nbr);
  //  sc_vols(sc);
  return sc;
}
