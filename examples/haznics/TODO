

Just some brief comments

0. 
All packages, cbc.block, ulfy, hseig etc should have a spesific version we download. 
Not git. Things will change down the line 

1. 
params: 
   - it would be convenient with something like
     init_param = input_param(inputfile="some_default_file_under_haznics")
     (2021-07-23 Ana:
         DONE - there is now a custom constructor for input_param,
         it sets the default values with hazmath init function
         (see src/utilities/parameters.c and src/haznics/haznics.i)
     )

   - set_param should be in module haznics
     (2021-07-23 Ana:
         should we make helper.py with python helper functions (like helper.c)?
     )

2.
Things should be moved to hseig/cbc.block/fenics_ii in a practical way

3.
A clean Poisson demo without any fractional stuff, just the use of hazmath/haznics
I suggest poisson.py from cbc.block, just using hazmath
(2021-07-23 Ana:
    DONE.
)

4.
A clean Stokes demo without any fractional stuff, just the use of hazmath/haznics
I suggest stokes.py from cbc.block, just using hazmath
(2021-07-23 Ana:
    Need to still figure out setting up kernel for AMG in hazmath.
)

5.
Is hseig needed for Poisson-Babuska with rational approximation ?
Correspnding demo in hseig or what?
(2021-07-23 Ana:
    It's not needed. I've updated demo_poisson.py in examples/haznics/)
)

6.
In mixed Darcy we can use multilevel?
(2021-07-23 Ana:
    In cbc.block/demo/mixedpoisson.py, we use AMG from hazmath.
    Miro also put the ones with hypre.
    Do we need also a version with HX div-div preconditioner from hazmath?
)

7.
Nice demo for rational approximation of sums of fractional powers, just as a function
(2021-07-26 Ana:
    See examples/haznics/demo_sumfractional.py. Is something like this ok?
)

8.
Simple Darcy-Stokes problem
(2021-07-23 Ana:
    DONE. Not sure if it's simple enough though. See examples/haznics/demo_darcy_stokes.py
)