%----------------------------------------------%
% input parameters: for grid generation        %
%----------------------------------------------%
title{L-shaped domain}
dimension{2}   % spatial dimension in which the grid has to be generated
print_level{2}	% how much information to print out: 0 less | >0 more
refinement_type{1} %% -1 (edges going left to right in the unit cube; 1 (criss-cross).
file_grid{2D-K1.haz}
file_vtu{2D-K1.vtu}

%%%%%%%%%%%%%%AMR %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% marking type: 0 everything is marked; not zero can be user defined
%%%  marking strategy as in the examples given in the file
%%%  solve_estimate_mark.h

amr_marking_type{0}

num_refinements{0}

err_stop_refinement{        -1.e-10        }


%%% coordinate systems: 
num_coordsystems{3} % number of coordinate systems
data_coordsystems{0 0. 0.  0
		  1 0. 0.  1
		  2 -1. -1.  1}

num_vertices{6} %number of vertices
data_vertices{0 0 -1.   -1. 	%% vertex number, coord system, coords
	      1 0  1.   0.  
	      2 0  0.   0.   
	      3 0  1.   -1.  	
	      4 0  1.    1.  
	      5 0 -1.   1.  
	      }
num_edges{7} %
data_edges{0 2	3 %(v1 v2 num_divisions)
           2 5	3
           4 5	6
  	   0 3  6
  	   1 2  6
  	   1 4  3
  	   1 3  3
	   }

num_macroelements{2}
data_macroelements{0 3 2 1 1
	           2 1 5 4 1
	      }

num_macrofaces{7}
data_macrofaces{0 3  1 %boundary face with code 1
		1 3  1
		1 4  1
		4 5  1
		0 2  1
		2 5  1
		2 1  0 % interior
		   }


