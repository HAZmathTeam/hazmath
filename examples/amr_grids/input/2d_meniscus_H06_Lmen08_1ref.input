%----------------------------------------------%
% input parameters: for grid generation        %
%----------------------------------------------%
%%%%%%%%%%%%%% AMR %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% marking type: 0 everything is marked; not zero can be user defined
%%%  marking strategy as in the examples given in the file
%%%  solve_estimate_mark.h

title{Meniscus in 2D}

amr_marking_type{33} %% 0 means uniform refinement everywhere.

num_refinements{14}

err_stop_refinement{        -1.e-10        } %% for the user to define and use

dimension{2}   % spatial dimension in which the grid has to be generated

print_level{1}	% how much information to print out: 0 Nothing | >0 Something

refinement_type{-1}

file_grid{2d_meniscus_fixH_Lmen08.haz}
file_vtu{2d_meniscus_fixH_Lmen08.vtu}

%---------------%
% coordinate systems: Each has coordinates of the origin o[0:dim-1]
%                     type (0=cartesian, 1=polar)%
%---------------%
num_coordsystems{1} % number of coordinate systems
data_coordsystems{0 0 0. 0.}

%---------------%
% graph which describes the domain. The input are
% vertices and edges.
%---------------%

num_vertices{8} %number of vertices
%%% coords, type, origin for polar system: angles are in degrees
data_vertices{0 0   0.         0.
	            1 0   0.100000   0.
	            2 0   0.         0.600000
	            3 0   0.100000   0.600000
							4 0   0.900000   0.
							5 0   0.900000   0.600000
							6 0   1.         0.
							7 0   1.         0.600000  }
%
%---------------%
% edges and number of divisions for every edge.
% opposite edges have the same number of divisions. if they do not,
% then the max number of divisions is taken.
%---------------%

num_edges{10} %

%% edge: 1st vertex, 2nd vertex, number of divisions.
data_edges{0 1	8
           1 3  32
           0 2 	32
  	   2 3  8 
	   1 4  64 
	   4 5  32
	   3 5  64 
	   4 6  8 
	   6 7  32
	   5 7  8 }


%%% ====================MACROELEMENTS=========================
num_macroelements{3}
data_macroelements{0 1 2 3  1
                   1 4 3 5  1
									 4 6 5 7  1}
 									 %% v1...v4 and material.

%%% ====================MACROFACES=========================
num_macrofaces{8}
data_macrofaces{0 1   3
								0 2   1
								2 3   4
								1 4   3
								3 5   5
								4 6   3
								6 7   2
								5 7   4
		   } %% codes on boundary faces (v1,v2,code).


%%% ====================REFINE POINTS=========================
%---------------%
% specify the points near which the mesh will be refined
%---------------%
num_refine_points{2} %number of points near which the mesh will be refined
%%% coords, type, origin for polar system: angles are in degrees
data_refine_points{0 0   0.100000   0.600000
		   1 0   0.900000   0.600000
				    }
