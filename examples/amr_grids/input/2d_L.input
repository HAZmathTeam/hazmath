%----------------------------------------------%
% input parameters: for grid generation        %
%----------------------------------------------%
title{L-shaped domain}
dimension{2}   % spatial dimension in which the grid has to be generated
print_level{1}	% how much information to print out: 0 less | >0 more
refinement_type{1} %% -1 (edges going left to right in the unit cube; 1 (criss-cross).
file_grid{output/2d_L.haz}
file_vtu{output/2d_L.vtu}

%%%%%%%%%%%%%%AMR %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% marking type: 0 everything is marked; not zero can be user defined
%%%  marking strategy as in the examples given in the file
%%%  solve_estimate_mark.h

amr_marking_type{1}

num_refinements{0}

err_stop_refinement{        -1.e-10        }


%%% coordinate systems: 
num_coordsystems{3} % number of coordinate systems
data_coordsystems{0 0. 0.  0
		  1 0. 0.  1
		  2 -1. -1.  1}

num_vertices{8} %number of vertices
data_vertices{0 0 -1.   -1. 	%% vertex number, coord system, coords
	      1 0 -1.   0.  
	      2 0  0.   -1. 
	      3 0  0.   0.   
	      4 0  1.   -1.  	
	      5 0  1.    0.  
	      6 0 -1.   1.  
	      7 0  0.   1.
	      }
num_edges{6} %
data_edges{0 1	1 %(v1 v2 num_divisions)
           1 3	1
           0 2	1
  	   2 3  1
  	   3 7  1
  	   4 5  1
  	   6 7  1
	   }
num_macroelements{3}
data_macroelements{2 4 3 5 1
	      0 1 2 3 2
	      6 7 1 3 -8
	      }
num_macrofaces{10}
data_macrofaces{0 2  1 %boundary face with code 1
		1 4  0 % iterior face
		3 2  4
		2 3  0
		0 1  32
		1 4  24
		4 5  17
		3 5  1
		6 7  2
		7 3  3
		   }


